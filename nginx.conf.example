# Nginx 反向代理配置示例
# 文件位置: /etc/nginx/sites-available/sub-store-node

# HTTP 配置
server {
    listen 80;
    server_name your-domain.com;  # 替换为您的域名
    
    # 访问日志
    access_log /var/log/nginx/sub-store-node.access.log;
    error_log /var/log/nginx/sub-store-node.error.log;

    # 请求体大小限制
    client_max_body_size 10M;

    location / {
        # 代理到 Node.js 服务
        proxy_pass http://localhost:3000;
        
        # WebSocket 支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # 传递真实客户端信息
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # 健康检查端点（不记录日志）
    location /health {
        proxy_pass http://localhost:3000/health;
        access_log off;
    }
}

# HTTPS 配置（使用 Let's Encrypt）
# 取消注释以下内容并运行 certbot 获取 SSL 证书
# 命令: sudo certbot --nginx -d your-domain.com

# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # SSL 证书（由 certbot 自动配置）
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # SSL 配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # 访问日志
#     access_log /var/log/nginx/sub-store-node-ssl.access.log;
#     error_log /var/log/nginx/sub-store-node-ssl.error.log;
#     
#     # 请求体大小限制
#     client_max_body_size 10M;
#     
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#     
#     location /health {
#         proxy_pass http://localhost:3000/health;
#         access_log off;
#     }
# }

# HTTP 重定向到 HTTPS（启用 HTTPS 后取消注释）
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
